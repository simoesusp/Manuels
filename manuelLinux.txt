GUIA LINUX !!

- Ctr-Alt-T

- Ctr-Alt-Backspace --> Logout

- Ctr-Alt-F2 --> Terminate X server and move to terminal 2 (F3 move pra terminal 3 ...)
** Nao funciona no UBUNTO, POIS NAO FECHA O X SERVER !!!!
- startx --> Strart the Graphical User Interface (GUI)
** Nao funciona no UBUNTO, POIS NAO FECHOU O X SERVER !!!

Ctrl-C    -->   STOPA um job que esteja rodando no terminal

Ctrl-Z    -->   PAUSA um job que esteja rodando no terminal
ex.: [1]+  Stopped                 ping -c3 www.google.com

jobs      -->   Lista os jobs da curent section
ex.: [1]+  Stopped                 ping -c3 www.google.com

fg        -->   Reinicia os jobs Pausados

which gpg   -->   Diz qual e' o arquivo do programa que esta' rodando
			-->   Resulta em:	/usr/local/bin/gpg

Listar os processos rodando: 
	ps aux
	kill -9 5313   --> mata o processo 5313

sudo halt
sudo reboot
sudo shutdown -h now

sudo apt-get update	--->> Atualisa os pacotes antes de instalar os programas
sudo apt-get upgrade    --->> Atualisa os programas instalados

sudo apt-cache search steam   -->> busca pelo pacote da steam ou qualquer outro

~/   significa :  /home/simoes/
./programa   :   roda o programa que esta' na mesma pasta

echo eca >> file.txt    -->  printa "eca" no final do arquivo file.txt
echo eca > file.txt    -->  sobrescreve o arquivo file.txt com a palavra eca (APAGANDO TUDO!!)

|   -->  Redicionamento de output pra outro programa!
ex.: cat lista | grep esposa > newlist  --> abre e percorro todo o qrquivo lista e procura por linhas que contem "esposa" e printa no novo arquivo newlist

&&  --> Concatena comandos
ex.: /usr/bin/montador "$1" "$2" && /usr/bin/sim "$2" "$3"
Obs.: 	&&  faz rodar as duas linhas, mas so'  se a primeira rodar!
		$1  ... $3  Sao os argumentos passados

sudo rm -r NOMEDAPASTA  --> Remove a pasta (-r  =>  recursivamente)
mkdir  NOMEDAPASTA   --> Cria pasta


x---------------x--------------------x
GNOME TWEAK TOOL
Pra instalar: sudo apt-get install gnome-tweak-tool
Pra rodar: gnome-teaks

x---------------x--------------------x
CRIAR LINK NO DESKTOP
cd ~/Desktop
ln -s /home/simoes/eagle-9.0.1/eagle EAGLE


x---------------x--------------------x
MOUNT ISO:
EX.: Monte a ISO do Microsoft Office e instale normalmente:

	$ sudo mkdir /mnt/cdrom
	$ sudo mount -o loop -t iso9660 /Microsoft-Office-2007.iso /mnt/cdrom/
	$ wine /mnt/cdrom/setup.exe

--> Pra DESMONTAR:  (note que os retardado usam umount, ao inves de UNmount como eu tava tentando adivinhar!!!)
sudo umount /mnt/cdrom

x---------------x--------------------x
 LINE EDITING

        These keys can be used to edit text being entered 
        on the "command line" at the bottom of the screen.

 RightArrow ..................... ESC-l ... Move cursor right one character.
 LeftArrow ...................... ESC-h ... Move cursor left one character.
 ctrl-RightArrow  ESC-RightArrow  ESC-w ... Move cursor right one word.
 ctrl-LeftArrow   ESC-LeftArrow   ESC-b ... Move cursor left one word.
 HOME ........................... ESC-0 ... Move cursor to start of line.
 END ............................ ESC-$ ... Move cursor to end of line.
 BACKSPACE ................................ Delete char to left of cursor.
 DELETE ......................... ESC-x ... Delete char under cursor.
 ctrl-BACKSPACE   ESC-BACKSPACE ........... Delete word to left of cursor.
 ctrl-DELETE .... ESC-DELETE .... ESC-X ... Delete word under cursor.
 ctrl-U ......... ESC (MS-DOS only) ....... Delete entire line.
 UpArrow ........................ ESC-k ... Retrieve previous command line.
 DownArrow ...................... ESC-j ... Retrieve next command line.
 TAB ...................................... Complete filename & cycle.
 SHIFT-TAB ...................... ESC-TAB   Complete filename & reverse cycle.
 ctrl-L ................................... Complete filename, list all.

  -?  ........  --help
  h  H          Display help
  man cp	Manuel de cada comando!!

x---------------x--------------------x
LS
ls tab tab
qualquer comando tab tab  -->  mostra todas as variacoes do comando 

lspci -> mostra ate'  a placa de video
lsusb

lshw -short --> lista o hardware da maquina, falando do processador e memoria
			--> -short resume tudo... fica bem melhor...
	--> Mas nao vem por default, tem que instalar:
	sudo apt-get install lshw
x---------------x--------------------x
MUDAR OWNER
sudo chown -R simoes: Foguete  --> Se for Folder do ROOT, tem que mudar com sudo

chown -R USERNAME:GROUPNAME /PATH/TO/FILE
--> Or, if the group shall be the specified user's primary group (usually same name), you can also omit the GROUPNAME and just give the USERNAME: with a colon (no space before it!). It will be set implicitly:

chown -R USERNAME: /PATH/TO/FILE
--> To only change the user and leave the group as it is, just specify USERNAME and no group name and no colon:

chown -R USERNAME /PATH/TO/FILE
--> To only change the group and leave the owner user as it is, just specify :GROUPNAME with a leading colon:

chown -R :GROUPNAME /PATH/TO/FILE


x---------------x--------------------x
CHANGE PERMISSION    /    INSTALL FILES

--> give the .sh file permission to execute:
chmod +x file.sh
chmod +x *   --> Troca de todos os files na pasta

--> then you can execute it with 
./file.sh


x---------------x--------------------x
FORMATAR PENDRIVE

List your block storage devices by issuing the command:
lsblk

	Then identify your pen drive by it's SIZE. In my case its /dev/sdb

Erase everything in the pen drive (OPTIONAL):
	sudo dd if=/dev/zero of=/dev/sdb bs=4k && sync  
	--> Replace /dev/sdb with your corresponding device. This will take some time. It will pretend to stuck. Just be patient.

Make a new partition table in the device:
sudo fdisk /dev/sdb

	Then press letter o to create a new empty DOS partition table.

	Make a new partition:
	Press letter n to add a new partition. You will be prompted for the size of the partition. Make a primary partition when prompted, if you are not sure.

	Then press letter w to write table to disk and exit.

Format your new partition.

	See what is your new partition with a command
	lsblk     --> In my case it is /dev/sdb1

	Issue the command below to format the new volume:
	sudo mkfs.vfat /dev/sdb1  

Eject the device:
 sudo eject /dev/sdb


x---------------x--------------------x
Gravar uma imagem de um disco

sudo dd if=~/Documents/zip/Activated.iso of=/dev/sdc
-> if e' o input file    e of  e' o output file e tem que apontar para o nome do pendrive, sem os numeros das particoes

--> Para listar os nomes dos discos: 
sudo fdisk -l


x---------------x--------------------x
FORMATAR PARTICAO DO HD

	See what is the partitions with command:
	lsblk     --> In my case it is /dev/sda3

	Issue the command below to format the new volume:
	sudo mkfs.ext4 /dev/sda3

	Monta a particao em uma pasta:
	sudo mount /dev/sda3 /windows

	Da permissao para todo mundo escrever e ler da particao:
	sudo chmod 777 -R /windows



x---------------x--------------------x
ENCRIPITAR

gpg -c historico.txt   -->  -c pra encripi
rm historico.txt       --> E' bom remover o antigo
gpg historico.txt.gpg  --> Pra desencripitar  --> Sem o -d ele tipo ... adivinha que e' pra desencripitar.
						--> o certo e' incluir -d,mas assim o retardado outputa na tela !!
						--> Pra outputar pro arquivo, usar: --output ${1%.gpg}

CUIDADO!!!  Assim ele guarda a senha no KEYRING.
Pra nao guardar,usar: --no-symkey-cache
	--> Mas so' tem esse argumento na VERSAO: 2.2.7, que NAO e' a padrao do UBUNTU 18. 
	--> Pode baixar dosite: https://www.gnupg.org/download/index.html  e recompilar, tendo que reinstalar 5 libraries
	--> Ou baixar do github do simoes ja' pronto pro UNBUNTU:  
  
function enc(){ 
  gpg -c --no-symkey-cache "$1" && rm "$1"   # -c pra encripitar
  ls
  }

function dec(){ 
  gpg --output ${1%.gpg} -d "$1" && rm "$1"   #  -d pra desencripitar
  ls
  }

--> Assim ainda fica reclamando que: gpg-agent' is older than us (2.2.4 < 2.2.7)
--> Da' pra incluir [2> /dev/null]  no final pra calar a boca!!!
--> ex.: gpg --output ${1%.gpg} -d "$1" 2> /dev/null



x---------------x--------------------x
CHAVE SSH

ssh-keygen -t rsa -b 4096 -C "simoes@icmc.usp.br"   -->  Cria uma chave SSH e salva em: ~/.sh
		--> Tem que ser o mesmo email do github!

x---------------x--------------------x
WINE
Pra rodar um programa:
- Ligar Winetricks
- Run a Commandline shell
- Vai para: ~/.wine/dosdevices/c:/Ants
- Digita: ./ants2.exe


x---------------x--------------------x 
MICROSCÓPIO NO LINUX USANDO MPV

Ao conectar o USB do microscópio, o Linux irá 'montá-lo' em /dev/video<numero>
Normalmente, /dev/video0 é a webcam do notebook, então o microscópio será /dev/video1 ou qualquer coisa maior
Checar o número correto com o comando:

- ls /dev/video*

Iremos usar mpv para exibir a imagem.
Instalar mpv, caso ainda não esteja instalado:

- sudo apt install mpv

Para abrir:

- mpv /dev/video1 --video-rotate=180 --video-zoom=0.1 --fs

OBS: 
	por algum motivo, a imagem está invertida, por isso usamos --video-rotate=180 para ficar normal
	--video-zoom=0.1 diminui a imagem, aumentando a nitidez
	--fs abre em fullscreen

Para tirar fotos do que o microscópio está vendo, podemos usar o próprio mpv, apertando a tecla 's'
Para gravar o vídeo use a opção --record-file=<nome do arquivo>


x---------------x--------------------x
ARDUINO

Eu desinstalei a versao que tava (Arduino2:1.0.5) e baixeidireto do GITHUB a ultima versao do Arduino= 1.8.5
link: https://www.arduino.cc/en/Main/Software
Deszipar a pasta e executar o install.sh pra instalar o sw.

MOVA de Downloads para Documentos ou para HOME, senao o retardado instala no Downloads!
Para deszipar (Usar TAR mesmo, pois deixa as permissoes certas!!):
tar -xvf arduino-1.8.9-linux64.tar.xz 

Para instalar: 
 sudo ./install.sh

Para arrumar as permissoes das pastas PARA O USUARIO NORMAL (se nao, ele vai ficar enchendo o saco pra executar como SUDO), executar:  
./arduino-linux-setup.sh $USER


--> Essa versao funcionou e programaou o Arduino de primeira, pois eu ja' tinnha resolvido os problemas da USB na versao anterior...

LIBRARIES: /home/simoes/Arduino/libraries/
--> Mudou as libraries pra esse novo lugar!!



-----------------------
Jeito Ruim de instalar (Instala uma versao maluca Arduino2:1.0.5)
Essa versao nao tem um Library Mananger e RECLAMA das libraries que tem "-" no nome!!!!
--> Nao consegui fazer a library do NTSF funcionar ... Entao desinstalei tudo com: sudo apt-get purge arduino

sudo apt-get update  --> Updata a lista de repositorios
sudo apt-get install arduino  --> instala o Arduino IDE
sudo apt-get install arduino arduino-core  --> instala mais bagulhos
sudo apt upgrade  --> Updata todo sw que ja' foi instalado! Inclusive o do Arduino

LIBRARIES: /home/simoes/sketchbook/libraries/

--> So' que agora nao vai encontrar a porta serial pra programar o arduino!
--> Tem que arrumar assim:

lsusb  --> Lista tudo que esta' instalado nas USBs, se conectar o cabo e dar o comando novamente vai mostrar a unica diferente, que e'  o arduino!
--> Isso mostra se ja' tem um driver instalado pro chip de USB da placa do Arduino! Geramelte tem no Ubuntu.

ls /dev  --> Lista tudo que esta' instalado na maquina, geralmente o arduino e' a ttyUSB0, se nao tiver nada mais ligado nas USB
ls -l /dev/ttyUSB0
	crw-rw---- 1 root dialout 188, 0 Mai  9 12:44 /dev/ttyUSB0
--> Isso mostra que o ttyUSB0  faz parte do grupo dialout

--> Agora e'  so'  adicionar nosso usuario ao grupo dialout
sudo usermod -a -G dialout simoes     --> onde simoes e' seu username !!
--> Tem que se deslogar e logar novamente pra fazer essas mudancas!!


ISSO NAO RESOLVE NO Ubuntu 18.04, pois da' pau no JAVA!
==> Fica dando essa mensagem quando abre o arduino: java.lang.NullPointerException thrown while loading gnu.io.RXTXCommDriver

--> Instalar Java:
apt-get install openjdk-8-jre

--> On a newly installed Ubuntu 18.04 LTS system. After installing Oracle java 8:

$ sudo add-apt-repository ppa:webupd8team/java
$ sudo apt update
$ sudo apt install oracle-java8-set-default

DAi' FUNCIONOU!!!

-------------x--------

--> Ver todos os grupos eos users que pertencem a eles:
cat /etc/group

--> Se tudo der errado... Tentar:
--> sudo chmod 666 /dev/ttyUSB0   --> Da' todas as permissoes para o ttyUSB0

	Run command "sudo dmesg -c" which prints and clears the kernel log messages since startup
	Now plug the arduino board into an USB port
	Run command "dmesg" in the console (no need to do this as root this time )
	--> Isso mostra tudo que acontece na maquina... Vai mostrar o mapeamento da USB
	--> Pra nao precisar limpar o log, tente:
	dmesg -w     --> Muito Legal!  Fica monitorando  a partir de agora tudo que acontece!!

x---------------x--------------------x
NODE NA IDE ARDUINO:
ESP 8266

Entrar em: http://www.kevindarrah.com/wiki/index.php?title=TrigBoard
Procurar pelo link do Base Firmware.

Go to File>>Preferences and add this URL to to the "Additional Boards Manager URL". 
Paste this link: http://arduino.esp8266.com/stable/package_esp8266com_index.json

Go to Tools>>Board>>Boards Manager... Search for ESP8266, and go ahead and click install
Dai ele vai instalar suporte para a nova placa.

ir em TOOLS>>Boards  e escolher:
Node MCU 0.9 (ESP-12Module)

Para testar, seecione a porta certa e abra o Files>>Examples  e procure o ESP 8266 >> Blink
No meu so' programou se botar a plaquinha sobre os cabos, NAO PODE ENCOSTAR NA MESA!!!!

WARNING:
1) Quando instala a board,ele instala tambemas libraries do ESP
Mas ele so' mostra em files>>exemples se tiver selecionado a Borad MCU 0.9 (ESP-12Module), senao nao aparece!!!

2) CUIDADO!!! OS NUMEROS DO DEFINE SAO OS GPIO, nao os pinos do chip!!! Como na Raspberry
Placa 	GPIO (Nome que deve dar no Define)
d0		16
d1		5
d2		4
d3 		0
d4		2
d5		14
d6		12
d7		13
d8		15
A0		17

x-----------x------------x-----------x
Como fazer ICONES 

gedit ~/Desktop/Arduino.desktop

[Desktop Entry]
 Name=Arduino IDE
 Comment=Arduino IDE
 Exec=/home/simoes/Arduino/arduino-1.8.9/arduino
 Path=/home/simoes/Arduino/arduino-1.8.9/
 Icon=/home/simoes/Arduino/arduino-1.8.9/lib/icons/24x24/apps/arduino.png
 Terminal=false
 Type=Application
 Categories=Utility;Application;Development;




x---------------x--------------------x
NVIDIA DRIVERS
sudo add-apt-repository ppa:graphics-drivers
sudo apt-get update

sudo apt-get install nvidia-390     -->> Pegar a ultima versao que aparece na lista apos o apt- do repositorio
									-->> as versoes 380, 390... sao as mais debugadas... Nao pegar as 391, 392...

Pra ver se instalou:
lsmod | grep nvidia  -->> isso lista os modulos procurando por referencias dos drivers isntalados

sudo apt-mark hold nvidia-390

Para apagar:
sudo apt-get purge nvidia*

x---------------x--------------------x
STEAM
sudo apt-get install steam

/home/simoes/.steam/steam/steamapps/common/Hearts of Iron IV/common/units

/home/simoes/.steam/steam/steamapps/workshop

/home/simoes/.local/share/Paradox Interactive/Hearts of Iron IV/mod

/home/simoes/.local/share/Paradox Interactive/Hearts of Iron IV/save games

x---------------x--------------------x
ALLIAS
alias apt-search='apt-cache search'

Pra ficar permanente, editar esse arquivo:
~/.bashrc    --->  e' onde esta definido o meu terminal!!

E depois tem que dar:
source ~/.bashrc   -->> usar pra refreshar depois de acrescentar comandos alias no arquivo .bashrc

echo $SHELL   -->  /bin/bash   --> Mostra onde estao tuas configuracoes

Tambem pode fazer FUNCOES (EDITANDO O ARQUIVO .bashrc):
function gg(){ 
  git add --all
  git commit -m $1
  git push
  }


x---------------x--------------------x
htop     -->>  Mostra os processos
F6 -> Sort by PID
F9 -> Kill o que tiver encima!


x---------------x--------------------x
OPENGL   -->>   INSTALAR

sudo apt-get install freeglut3-dev

--> To have found this on your own, you could have done:

sudo apt-cache search glut

--> After you have installed package freeglut3-dev you can confirm it contains the needed GL files by issuing

dpkg -L freeglut3-dev

--> which will list contents of the package


----x----
--> Caso deseje compilar um código com um único arquivo .c basta incluir as seguintes flags "-lglut -lGLU -lGL -lm".

gcc -o exemplo exemplo.c -lglut -lGLU -lGL -lm


x---------------x--------------------x
CODEBLOCKS
(tirado do site do mantenedor do Codebloks: http://www.edivaldobrito.com.br/instalar-ide-codeblocks-no-ubuntu/)

Passo 2. Se ainda nao tiver, adicione o repositorio do programa com este comando
sudo add-apt-repository ppa:damien-moore/codeblocks-stable

Passo 3. Atualize o gerenciador de pacotes com o comando:
sudo apt-get update

Passo 4. Agora use o comando abaixo para instalar o programa;
sudo apt-get install codeblocks codeblocks-contrib

Se fizer cagada no meio de der Crtl-C e parar a instalacao, reinicia assim: 
sudo apt-get install --reinstall codeblocks codeblocks-contrib

Para Desinstalar o Codeblocks:
sudo add-apt-repository ppa:damien-moore/codeblocks-stable -r -y
sudo apt-get remove codeblocks --auto-remove




x----------------------x-----------------x----------
SUBLIME

Add repository:
wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -

Ensure apt is set up to work with https sources:
sudo apt-get install apt-transport-https

Select the channel to use:
echo "deb https://download.sublimetext.com/ apt/stable/" | sudo tee /etc/apt/sources.list.d/sublime-text.list

Update apt sources and install Sublime Text
sudo apt-get update
sudo apt-get install sublime-text

x----------------------x-----------------x----------
Configure o Sublime para o Assembly do Processador ICMC

Copiar arquivos:
icmc_processor.sublime-build
icmc.tmLanguage
De: https://github.com/simoesusp/Processador-ICMC/blob/master/Text_Editors_Sintaxe/Sublime_Sintaxe_F7.tar
Para: /home/simoes/.config/sublime-text-3/Packages

icmc_processor.sublime-build ==> 
{
	"selector": "source.ICMC" ,
	"working_dir": "${project_path:${folder}}",
	"variants": [
		{ 
		  "cmd": ["/usr/bin/montador", "$file_base_name.asm", "$file_base_name.mif"],
		  "name": "Build",
		},
		{
		  "cmd": ["/usr/bin/buildandrun", "$file_base_name.asm", "$file_base_name.mif", "charmap.mif"],
		  "name": "Run",
		}
	]
}

Criar arquivo " buildandrun " na pasta /user/bin   com o seguinte:
#!/bin/bash
/usr/bin/montador "$1" "$2" && /usr/bin/sim "$2" "$3"

Obs.: 	&&  faz rodar as duas linhas, mas so'  se a primeira rodar!
		$1  ... $3  Sao os argumentos passados

COPIAR: montador, sim, buildandrun    para a pasta /usr/bin/
	--> Nao esqueca de verificar se tem permissao de EXECUTAR cada um dos tres programas:
ls -l  montador     --> Mostra as permissoes!
-rw-r--r-- 1 root root 48147 mai 25 08:42 montador    
	--> Da pra ver que nao tem permissao de executar [x]

sudo chmod +x /montador
ls -l  montador
-rwxr-xr-x 1 root root 48147 mai 25 08:42 /bin/montador
	--> Agora incluiu o [x]

sudo chmod +x /sim
sudo chmod +x /buildandrun 


Cuidado:  o charmap.mif tem que estar na mesma pasta do ASM

No Sublime vai colorir a sintaxe e pra montar e simular:
Shift+Ctrl+B  -->  Builda do asm -> mif
F7 --> Save + Build and Run (simula) 





X------------------X-------------------X
KRUSADER

--> Just install it using  Ubuntu Software...
--> If you need to use it in SUDO mode:

In Ubuntu 12.04 i386 Desktop I use this:
1. Make shortcut for Krusader on desktop.
2. Right click on shortcut and Properties
3. Change field Command.
Old value: krusader -caption "%c" %i
New value: gksudo krusader
4. Close

This runs krusader in root mode all the time. A better fix in my opinion is:

 --> Download and install kdesudo 

 --> From within krusader:

    Choose Settings -> Configure Krusader
    In the pop-up box choose Dependencies
    Under the General tab [which it defaults to], top line is kdesu.. in the blank space provided type: '/usr/bin/kdesudo' [without apostrophes]
    Might have a couple pop-ups the first time you enable [letting you know what packages are enabled and what are not], #1 rule: "Don't panic!" just hit ok..ok etc.
    Boom! you get the Root access window [when called], next time [you need root explorer] it won't have the previous warning/config messages.. so you are good to go. 



X------------------X-------------------X
Ainda naoTestei.....

5) Fazer USB funcionar no VirtualBox:
a) Adicionar seu user no vboxusers: 
# sudo adduser simoes vboxusers
b) Depois Rebootar
c) Clique na máquina virtual escolhida depois em Configurações. Selecione USB na lista de configurações e insira um filtro vazio se quiser habilitar qualquer dispositivo USB
d) Para adicionar algum dispositivo, com a máquina iniciada basta ir no menu Dispositivos -> USB -> e marcar algum dispositivo da lista



X------------------X-------------------X
# install wine and ltspice
sudo apt-get install wine
# sudo pacman -S wine
cd /tmp/
wget http://ltspice.linear-tech.com/software/LTspiceIV.exe
wine LTspiceIV.exe
rm LTspiceIV.exe

# start lstpice through wine
wine ~/.wine/drive_c/Program\ Files/LTC/LTspiceIV/scad3.exe

# start ltspice through wine with /tmp/example.asc
wine ~/.wine/drive_c/Program\ Files/LTC/LTspiceIV/scad3.exe /tmp/example.asc





x---------------x--------------------x
		BILEKI'S GUIDE on How to prepare the SD Card on Linux    ---   
x---------------X--------------------X

1) How to prepare the SD Card on Linux - Without using NOOBS

- Step 1: Insert the SD Card in the laptop card reader.

- Step 2: Open terminal and enter the following command:
	df -h
		This command will list all mounted devices.

- Step 3: Find out which device in the list refers to SD Card (usually /dev/mmcblk0p1 or /dev/ssd1) and unmount it with the command: 
	umount /dev/mmcblk0p1
		"mmcblk0p1"(or "ssd1") must be replaced for the SD Card device name.

- Step 4: Access the folder that contains the OS image file and enter the command:
	dd bs=4M if=2015-05-05-raspbian-wheezy.img of=/dev/mmcblk0, 
		"mmcblk0"(or "ssd") is the SD Card device name, without partition (in this case mmcblk0(ou ssd), not "mmcblk0p1"(or "ssd1").  
	- Warning: Do not confunda with the HardDisk device, or it will destroy your OS!!!

- Step 5: After finish the image writing mentioned in Step 4, before remove the SD Card from the card reader, enter the command:
	sync
		so, remove and insert it in Raspberry Pi, connecting to the internet with a network cable, a USB keyboard and a HDMI cable from a monitor in the Raspberry Pi board. Next, we must plug a 5V energy source in the Raspberry Pi with at least 700mA to turn the board on.
		


		
-----------x---------------x--------------
APPENDIX A: Network configuration for static IP (eg. Simoes room)
	-- Must be done always. The reboot erase all!!!
	-- See Appendix C to make it stay configured
	-- Everything between '<' and '>', must be replaced by connection values
	
	Enter the following command in the terminal:
	sudo ifconfig eth0 <IP> netmask <MASCARA>
		Eg:
		IP = 143.107.231.92
		MASCARA = 255.255.255.192
		ex.: sudo ifconfig eth0 143.107.231.92 netmask 255.255.255.192

	Enter the following command in the terminal:
	sudo route add default gw <GATEWAY>
	Ex:
		GATWAY = 143.107.231.65
		ex.: sudo route add default gw 143.107.231.65

	Enter the following command in the terminal:
	sudo nano /etc/resolv.conf
		add line: 
			nameserver 8.8.8.8
		type:
		Ctrl+O  -> Salvar
		Ctrl+X  -> Sair
		
		If using VI: 
			Xinga e Reza!!!
			type "i" to add text
			type ESC and :wq  to save and exit
			Reza e Xinga mais um pouco!!!

	Enter the following command in the terminal:
	ping www.google.com
		To test connection!

	Dentro da USP as portas baixas sao bloqueadas, entao, caso esteja tentando conectar de um cabo de rede de dentro da USP, executar no terminal o comando:
	sudo nano /etc/ssh/sshd_config
		---trocar de Port 22 pra Port 22000
		

-----------x---------------x--------------
APPENDIX B: To establish connection to RaspberryPi by SSH in a Laptop running Linux

In RaspberryPi:
	Enter the following command in the terminal:
	sudo nano /etc/network/interfaces
	--search the following line 
	
		iface eth0 inet manual (or iface eth0 inet dhcp)
	
	--change to
	
		iface eth0 inet static
			address 192.168.0.10
			broadcast 192.168.0.255
			network 192.168.0.0
			netmask 255.255.255.0
			gateway 192.168.0.1
			dns-nameservers 8.8.8.8
			
		(and obviously comment the other lines in the file...)
		
		type:
		Ctrl+O  -> Save
		Ctrl+X  -> Exit


In the laptop, running linux:
	Enter the command in terminal:
		sysctl -w net.ipv4.ip_forward=1

	Enter the command in terminal:
	ifconfig eth0 192.168.0.1 netmask 255.255.255.0
		Obs1.: 192.168.0.1   will be the laptop IP Address in the network
		Obs2.: the laptop IP Address must have the same 3 fist numbers: eg. 192.168.0._
	
	Enter the command in terminal:
	sudo iptables -t nat -A POSTROUTING -o wlan0 -j MASQUERADE
	

To establish connection to RaspberryPi just plug a network cable between the laptop and the Rasp board and enter the command:
	ssh pi@192.168.0.10	--> this is the IP Address that you have saved in the Raspberry interfaces file.





-----------x---------------x--------------
APPENDIX C - Static IP permanently after reboots

	A. Checking Set Up

- Boot into Raspian and log in and connect to the internet doing Apendix A commands!

- First, we need to list the network interface we currently have available:

	cat /etc/network/interfaces

		The line . . . . 
			iface eth0 inet dhcp

			- Implies that we're currently getting out IP address by DHCP, meaning it's being dynamically registered by the router. This is what we want to change!

	B. Gathering Information

- Fist of all we need to grab some information from our router and Pi. There's a couple of command we need to run to get this info. Have a pen and paper handy! . . . 
	ifconfig

- This reveals your router information, the bit you want is after eth0 (the ethernet connection). . . .
	eth0      Link encap:Ethernet  HWaddr b8:27:eb:b3:fc:2c

               inet addr:192.168.1.81  Bcast:192.168.1.255  Mask:255.255.255.0

- Write down the following information. . .

	inet addr 192.168.1.81 (Pi's Current IP Address)
	Bcast 192.168.1.255 (The Broadcast IP Range)
	Mask 255.255.255.0 (Subnet Mask Address)

- We need a little more information before we proceed. Use the command. . . 

	netstat -nr

		(route -n will give you the same info)

- We need:

	'Gateway' Address 192.168.1.254
	'Destination' Address 192.168.1.0

	C. Editing Network Configuration

- We now need to plug this information into the Pi's network configuration file using a text editor.

	sudo nano /etc/network/interfaces

		- Simply change the line that reads:

			iface eth0 inet dhcp

			to

			iface eth0 inet static

- Then directly below this line enter the following (Please Note. You will need your own addresses we gathered in Part B, more details below). . . . 

	address 143.107.231.92
	netmask 255.255.255.192
	network 143.107.231.64
	broadcast 143.107.231.127
	gateway 143.107.231.65
	dns-nameservers 143.107.231.12 8.8.8.8

- To clarify what each part means. . . . 

address = The address you want to give your Pi, this can be any IP in the network range, but it's usually advisable to go higher rather than lower, or you could end up logging different devices to the same IP! I've selected 192.168.1.81, as we're already registered to that address (denoted by 'inet addr'), but this can be any IP address from the range192.168.1.1 to 192.168.1.255.

netmask = The 'Mask' address we wrote down earlier.

network = The router IP address, this is the 'Destination' Address was found earlier. You can also grab this off your router, it will say on the side somewhere.

broadcast = The 'Bcast' address we wrote down earlier. 

gateway = This is the 'Gateway' address we found earlier.

- So, it should look something like the above, but with your values! Remember to save before exit, CTRL+X (exit) then yes to save changes!

	
	D. Re-check Static IP Configuration

- Remove any existing leases

	sudo rm /var/lib/dhcp/*

- Then we'll need to reboot and check your changes. . . 

	sudo reboot

- One last thing that needs to be modified is the /etc/resolv.conf file. (Problem: This does not work for me!!Raspberry erases this file every time it reboots!!!!!!!! I included one line with nameservers in the "interfaces" file and it finally worked!!!!!!!!!!!
-- This file contains information of DNS name resolvers that allow your raspberry pi to resolve names to IP addresses.  For example, if you ping www.suntimebox.com the raspberry pi will have to determine the IP address of www.suntimebox.com.
- Enter the following command to edit the resolv.conf file.

	sudo nano /etc/resolv.conf
		- Enter the follow Google public dns server IP address.
		nameserver 8.8.8.8
		name server 8.8.4.4

--> The problem is that Rasp will erase this file everityme it reboots!!! Do not know why!!!
-- So, the trick is to add the line bellow to the file: etc/network/interfaces:
	dns-nameservers 143.107.231.12 8.8.8.8



----------- Abstract ----------
The file interfaces must be like this to work in Simoes room:
Edit with: sudo nano /etc/network/interfaces

	auto lo
	iface lo inet loopback

	iface eth0 inet static
	address 143.107.231.92
	netmask 255.255.255.192
	network 143.107.231.64
	broadcast 143.107.231.127
	gateway 143.107.231.65
	dns-nameservers 143.107.231.12 8.8.8.8

	auto wlan0
	allow-hotplug wlan0
	iface wlan0 inet manual
	wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf


	-->> restart the network stuff without need reboot (That did not work for me!!!!!)!:
		sudo /etc/init.d/networking restart

		
---------------X----------------X-------------		
APPENDIX D: Configure RaspberryPi to get a DHCP address from your router automatic

	comment all other lines referent to eth0 (ex. iface eth0 inet static ...)
	Include those tree lines:
		auto eth0 
		allow-hotplug eth0
		iface eth0 inet dhcp
		
		



		
X------------------X-------------------X
			SIMOES' GUIDE
X------------------X-------------------X

1) Configure GCC to compile optimizing to ARM7 of RaspberryPi 2
	GCC : gcc -O3 -march=armv7-a -mfpu=vfp -mfloat-abi=hard hello.c -o hello.exe
	
	Create a file that overwrite GCC and you don't have to enter this command line every time you want do this:
	
	a)Create a new file with the following contents:

		#!/bin/sh
		exec /usr/bin/gcc "$@" -march=armv7-a -mfpu=vfp -mfloat-abi=hard
		
	--Change /usr/bin/gcc to your actual compiler if that's not right on your system.

	b)Save it as /home/pi/bin/gcc.

	c)Make the new script executable:
		chmod +x /home/pi/bin/gcc

	d)Repeat to create another file for g++.

	e)Add /home/pi/bin to the start of your path:
		export PATH=/home/pi/bin:$PATH
	
	e)Compile your project. Whenever your new scripts are on the path they will override whatever the makefile says.

	gcc --help
	gcc --target-help             -->  Help com parametros de otimizacao como o march
- Se botar -v  na linha de comando pra compilar, ele da um monte de mensagems dizendo tudo que ta fazendo!!
	- Assim pode-se conferir se pegou os parametros do Arm7
	




--------------------x--------------------------x---------------------------
Ubuntu11.10 menus na direita
gconftool-2 --set "/apps/metacity/general/button_layout" --type string ":minimize,maximize,close" 

No Ubuntu 13:
gsettings set org.gnome.desktop.wm.preferences button-layout 'menu:minimize,maximize,close'








--------------------x--------------------------x---------------------------
DESCRICAO DA MAQUINA:
Lista com lshw -short


H/W path       Device     Class          Description
====================================================
                          system         Vostro 14-5480 (069A)
/0                        bus            0FVD51
/0/0                      memory         64KiB BIOS
/0/2f                     processor      Intel(R) Core(TM) i5-5200U CPU @ 2.20GH
/0/2f/2c                  memory         32KiB L1 cache
/0/2f/2d                  memory         256KiB L2 cache
/0/2f/2e                  memory         3MiB L3 cache
/0/2b                     memory         32KiB L1 cache
/0/31                     memory         8GiB System Memory
/0/31/0                   memory         8GiB SODIMM DDR3 Synchronous 1600 MHz (
/0/100                    bridge         Broadwell-U Host Bridge -OPI
/0/100/2                  display        HD Graphics 5500
/0/100/3                  multimedia     Broadwell-U Audio Controller
/0/100/14                 bus            Wildcat Point-LP USB xHCI Controller
/0/100/14/0    usb2       bus            xHCI Host Controller
/0/100/14/0/2             input          USB OPTICAL MOUSE
/0/100/14/0/4             generic        VFS5011 Fingerprint Reader
/0/100/14/0/5             multimedia     Integrated_Webcam_HD
/0/100/14/0/6             input          Touchscreen
/0/100/14/0/7             communication  Bluetooth wireless interface
/0/100/14/1    usb3       bus            xHCI Host Controller
/0/100/16                 communication  Wildcat Point-LP MEI Controller #1
/0/100/1b                 multimedia     Wildcat Point-LP High Definition Audio 
/0/100/1c                 bridge         Wildcat Point-LP PCI Express Root Port 
/0/100/1c.1               bridge         Wildcat Point-LP PCI Express Root Port 
/0/100/1c.1/0             generic        RTS5227 PCI Express Card Reader
/0/100/1c.2               bridge         Wildcat Point-LP PCI Express Root Port 
/0/100/1c.2/0  enp6s0     network        RTL8111/8168/8411 PCI Express Gigabit E
/0/100/1c.3               bridge         Wildcat Point-LP PCI Express Root Port 
/0/100/1c.3/0  wlp7s0     network        Wireless 7265
/0/100/1c.4               bridge         Wildcat Point-LP PCI Express Root Port 
/0/100/1c.4/0             display        GM108M [GeForce 830M]
/0/100/1d                 bus            Wildcat Point-LP USB EHCI Controller
/0/100/1d/1    usb1       bus            EHCI Host Controller
/0/100/1d/1/1             bus            USB hub
/0/100/1f                 bridge         Wildcat Point-LP LPC Controller
/0/100/1f.2               storage        Wildcat Point-LP SATA Controller [AHCI 
/0/100/1f.3               bus            Wildcat Point-LP SMBus Controller
/0/1           scsi1      storage        
/0/1/0.0.0     /dev/sda   disk           128GB SMART SSD SZ9STE
/0/1/0.0.0/1              volume         511MiB Windows FAT volume
/0/1/0.0.0/2   /dev/sda2  volume         55GiB EXT4 volume
/0/1/0.0.0/3   /dev/sda3  volume         62GiB EXT4 volume




--------------------x--------------------------x---------------------------

ERRORS ENCONTRADOS NO UBUNTU18.04 so far:

1) Diz que esta' desatualizado:
language-selector-common, language-selector-gnome, x11-xkb-utils

Solucao:
	simoes@LapFran:~$ sudo apt-get update

	simoes@LapFran:~$ sudo apt-get upgrade

	Reading package lists... Done
	Building dependency tree       
	Reading state information... Done
	Calculating upgrade... Done
	The following packages will be upgraded:
	  debhelper language-selector-common language-selector-gnome linux-firmware
	  python3-distupgrade python3-software-properties software-properties-common
	  software-properties-gtk ubuntu-release-upgrader-core
	  ubuntu-release-upgrader-gtk x11-xkb-utils

	Unpacking x11-xkb-utils (7.7+3ubuntu0.18.04.1) over (7.7+3) ...
	Setting up x11-xkb-utils (7.7+3ubuntu0.18.04.1) ...
	Processing triggers for desktop-file-utils (0.23-1ubuntu3) ...
	Setting up language-selector-common (0.188.1) ...
	Processing triggers for libglib2.0-0:amd64 (2.56.1-2ubuntu1) ...
	Processing triggers for libglib2.0-0:i386 (2.56.1-2ubuntu1) ...
	Processing triggers for man-db (2.8.3-2) ...
	Processing triggers for shared-mime-info (1.9-2) ...
	Setting up python3-software-properties (0.96.24.32.3) ...
	Processing triggers for gnome-menus (3.13.3-11ubuntu1) ...
	Processing triggers for dbus (1.12.2-1ubuntu1) ...
	Setting up language-selector-gnome (0.188.1) ...
	Processing triggers for hicolor-icon-theme (0.17-2) ...
	Setting up linux-firmware (1.173.1) ...
	Setting up python3-distupgrade (1:18.04.18) ...
	Setting up software-properties-common (0.96.24.32.3) ...
	Setting up ubuntu-release-upgrader-core (1:18.04.18) ...
	Setting up software-properties-gtk (0.96.24.32.3) ...
	Setting up ubuntu-release-upgrader-gtk (1:18.04.18) ...
	

Error in POL_Wine_InstallVersion
Unable to find version: 1.8-staging
